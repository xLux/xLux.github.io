<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Ios开发 | xLux 的博客]]></title>
  <link href="http://xuelixiang.com/blog/categories/ioskai-fa/atom.xml" rel="self"/>
  <link href="http://xuelixiang.com/"/>
  <updated>2015-12-02T12:57:13+08:00</updated>
  <id>http://xuelixiang.com/</id>
  <author>
    <name><![CDATA[xLux]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[使用Xcode 7和iOS9遇到的问题总结]]></title>
    <link href="http://xuelixiang.com/blog/2015/09/26/adapterios9problems/"/>
    <updated>2015-09-26T20:49:32+08:00</updated>
    <id>http://xuelixiang.com/blog/2015/09/26/adapterios9problems</id>
    <content type="html"><![CDATA[<h2>1、Bitcode</h2>

<p>Bitcode是被编译程序的一种中间形式的代码。包含Bitcode配置的程序将会在App Store上被编译和链接。当我们提交程序到App Store时，Xcode会将程序编译为一个中间形式，也就是Bitcode，然后App Store会再将这个Bitcode编译为64位程序。Bitcode允许苹果在后期重新优化我们程序的二进制文件，而不需要我们重新提交一个新版本到App Store上(比如编译器更新，苹果会自动用之前提交的Bitcode进行优化，这样就不必再编译器更新后再次提交App也能享受编译器升级带来的好处。另外比如我们的软件包中一般都有2x和3x的图片，在iOS9中可以只选择需要的内容下载，节省了用户的流量)。<!--more--><br>在Watch中的应用必须包含Bitcode，iOS不强制，MacOS不支持，但是在Xcode 7及以上版本中会默认开启Bitcode。但是有一些第三方的包还不支持Bitcode，就只能通过修改编译选项了，如下图：<br><img src="http://7xn37b.com1.z0.glb.clouddn.com/Bitcode.png" alt="关闭Bitcode" /><br></p>

<h2>2、网络协议</h2>

<p>iOS9之后改用更安全的https，如果应用中还是使用的HTTP通讯协议，则不能成功，需要在info.plist文件中加上以下声明：<br>
<img src="http://7xn37b.com1.z0.glb.clouddn.com/httpsKey.png" alt="使用HTTP" /><br></p>

<h2>3、应用跳转白名单URL Scheme</h2>

<p>iOS9中引入了白名单的概念，应用间的跳转需要在info.plist中进行配置，如下图：<img src="http://7xn37b.com1.z0.glb.clouddn.com/URLScheme.png" alt="URLScheme" /><br></p>

<h2>4、上传App Store时遇到的问题</h2>

<p><img src="http://7xn37b.com1.z0.glb.clouddn.com/TencentOpenApiBundle.png" alt="上传App遇到的问题" /><br>
需要进入到对应bundle目录下的info.plist文件中做相应的修改即可。</p>

<h2>5、使用UIAlertView作为输入框</h2>

<p>iOS9中正式废除了UIAlertView，改为使用UIAlertController，可以参考我的<a href="http://www.xuelixiang.com/blog/2015/09/21/uialertcontroller/">这篇博客</a>。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[iOS8新控件UIAlertController]]></title>
    <link href="http://xuelixiang.com/blog/2015/09/21/uialertcontroller/"/>
    <updated>2015-09-21T22:04:56+08:00</updated>
    <id>http://xuelixiang.com/blog/2015/09/21/uialertcontroller</id>
    <content type="html"><![CDATA[<p>UIAlertController是iOS8中新出现的控件，之前项目中一直使用的是UIAlertView，但是iOS9之后，UIAlertView彻底废除了，总结一下两个控件的用法。</p>

<!--more-->


<h2>UIAlertView</h2>

<p>UIAlertView对话框是iOS5中出现的控件，不仅可以实现提示用户的作用，还可以添加UITextField输入控件，最多可以添加两个。UIAlertView的使用非常简单，最简单的用法如下：
<code>
UIAlertView *alertview = [[UIAlertView alloc] initWithTitle:@"标题" message:@"默认样式" delegate:self cancelButtonTitle:@"取消" otherButtonTitles:@"好的", nil];
[alertview show];
</code>
在UIAlertViewDelegate中监听哪个按钮被按下。
通过设置alertViewStyle属性来实现输入文字、密码，也可以实现作为登陆框的效果。</p>

<h2>UIAlertController</h2>

<p>UIAlertController的使用也比较简单，按钮的动作回调方法不再使用delegate，而是用block，代码结构看起来更加清晰。UIAlertController可以添加多个UItextField来作为输入框，使用更加灵活。使用方法如下：
<code>
    UIAlertController *alertController = [UIAlertController alertControllerWithTitle:@"请输入抢单积分" message:@"积分不能小于5分" preferredStyle:UIAlertControllerStyleAlert];
                [alertController addTextFieldWithConfigurationHandler:^(UITextField * _Nonnull textField) {
                    textField.keyboardType = UIKeyboardTypeNumberPad;
                    textField.placeholder = @"所投积分";
                }];
                UIAlertAction *canselAction = [UIAlertAction actionWithTitle:@"取消" style:UIAlertActionStyleCancel handler:nil];
                kWeakSelf(self);
                UIAlertAction *okAction = [UIAlertAction actionWithTitle:@"确定" style:UIAlertActionStyleDefault handler:^(UIAlertAction * _Nonnull action) {
                    UITextField *textField = [[alertController textFields] firstObject];
                    if (textField.text.length == 0) {
                        ALTip *tip = [[ALTip alloc] init];
                        tip.tip = @"请输入积分";
                        tip.parent = weakSelf;
                        [tip show];
                    }else if([textField.text integerValue] &lt;= 5){
                        ALTip *tip = [[ALTip alloc] init];
                        tip.tip = @"输入的积分不符合规则";
                        tip.parent = weakSelf;
                        [tip show];
                    }else{
                        [weakSelf getTheGrab:textField.text];
                    }
                }];
                [alertController addAction:canselAction];
                [alertController addAction:okAction];
                [self presentViewController:alertController animated:YES completion:nil];
</code></p>
]]></content>
  </entry>
  
</feed>
